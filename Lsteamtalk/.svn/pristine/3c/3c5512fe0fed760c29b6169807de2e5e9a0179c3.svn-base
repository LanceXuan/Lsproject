package com.lesso.serviceImpl;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.lesso.beans.CcNotice;
import com.lesso.dao.CcNoticeDao;
import com.lesso.daoImpl.CcNoticeDaoImpl;
import com.lesso.service.CcNoticeService;
import com.lesso.util.StringUtil;

public class CcNoticeServiceImpl implements CcNoticeService{
	private CcNoticeDao dao = new CcNoticeDaoImpl();
	
	@Override
	public int saveCcNotice(CcNotice ccNotice) {
		// TODO Auto-generated method stub
		int isok = dao.saveCcNotice(ccNotice);
		//处理结果
        if(isok>0){
            System.out.println("操作成功");
        }else{
            System.out.println("操作失败");
        }
        return isok;
	}

	@Override
	public CcNotice getCcNotice(int noticeId) {
		// TODO Auto-generated method stub
		CcNotice notice = new CcNotice();
		try {
			notice = dao.getCcNotice(noticeId);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return notice;
	}

	@Override
	public List<CcNotice> findByPagination(int currentPage, int pageSize,
			Map<String, Object> m) throws Exception {
		return dao.findByPagination(currentPage, pageSize, m);
	}

	@Override
	public int getTotal(Map<String, Object> m) throws Exception {
		return dao.getTotal(m);
	}

	@Override
	public boolean updateMarkRead(String uid, int id) {
        Log logs = LogFactory.getLog(CcNoticeServiceImpl.class);
		try{
			CcNotice notice = dao.getCcNotice(id);
            logs.info("更新公告已读状态方法开始执行,公告Id为"+id+",已读人Id为"+uid);
			boolean iswork = false;
			if(notice != null){
				if(StringUtil.isNotEmpty(notice.getMarkRead())){
					String[] arr = notice.getMarkRead().split(",");
					if(!StringUtil.IsinStringArr(arr, uid)){
					   logs.info("多次阅读uid is"+uid);
					   uid =notice.getMarkRead()+","+uid;
					   iswork = dao.updateMarkRead(id, uid);
					}
				}else{
				   iswork = dao.updateMarkRead(id, uid);
				}
				logs.info("更新公告已读状态方法的成功状态是"+iswork);
			}
			return iswork;
		}catch(Exception e){
			e.printStackTrace();
			logs.info("更新公告已读状态方法异常:"+e.getMessage());
			return false;
		}
		
	}

}
